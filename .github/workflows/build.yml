---
name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

env:
  FORCE_COLOR: 1
  MYPY_FORCE_COLOR: 1
  PY_COLORS: 1
  TOX_TESTENV_PASSENV: >-
    FORCE_COLOR
    MYPY_FORCE_COLOR
    NO_COLOR
    PY_COLORS
    PYTEST_THEME
    PYTEST_THEME_MODE
  TOX_PARALLEL_NO_SPINNER: 1

jobs:
  test:
    name: Test
    strategy:
      matrix:
        python:
          - "3.10"
          - "3.11"
          - "3.12"
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.platform }}
    continue-on-error: ${{ matrix.python == '3.12' }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[tests]
      - name: Lint
        run: ruff --verbose src
      - name: Check Types
        run: mypy --verbose src
      - name: Format Code
        run: black --verbose src
      - name: Run Tests
        run: bcamp-dl --version

  build:
    name: Build
    needs:
      - test
    runs-on: ubuntu-latest
    environment: build
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - name: Install Dependencies
        run: |
          python -m pip install build
          python -m pip install twine
      - name: Build
        run: |
          python -m build
      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        with:
          repository-url: https://test.pypi.org/legacy/
